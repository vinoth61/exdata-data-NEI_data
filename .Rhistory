## load the data
train_x <- read.table("./UCI HAR Dataset/train/X_train.txt")
train_y <- read.table("./UCI HAR Dataset/train/y_train.txt")
x_name <- read.table("./UCI HAR Dataset/features.txt")
activity_label <- read.table("./UCI HAR Dataset/activity_labels.txt")
subject_train  <- read.table("./UCI HAR Dataset/train/subject_train.txt")
test_x <- read.table("./UCI HAR Dataset/test/X_test.txt")
test_y <- read.table("./UCI HAR Dataset/test/y_test.txt")
subject_test <- read.table("./UCI HAR Dataset/test/subject_test.txt")
## use x_name as coloum names for train_x & test_x
names(train_x) <- x_name[,2]
names(test_x) <- x_name[,2]
## name train_y & test_y by activity label
train_y <- merge(train_y,activity_label,by.x="V1",by.y="V1",sort=FALSE)
test_y <- merge(test_y,activity_label,by.x="V1",by.y="V1",sort=FALSE)
## bind y ~ x and change y colname
train <- cbind(train_y[,2], train_x, subject_train)
colnames(train)[1]<- "activity_label"
train[,564] <- "train"  ## train data label
test  <- cbind(test_y[,2],test_x, subject_test)
colnames(test)[1]<- "activity_label"
test[,564] <- "test"  ## test data label
## Merges the training and the test sets
wholedata <- rbind(train,test)
colnames(wholedata)[c(563,564)] <- c("subject","data_type")
write.table(wholedata, "./UCI HAR Dataset/submission/wholedata.txt", sep=" ")
## 2. Extracts only the measurements on the mean and standard deviation for
## each measurement.
## find columns for mean & std (find "mean" or "std" strings)
mean_std_index <-  which(regexpr("mean", colnames(wholedata)) > 0 |
regexpr("std", colnames(wholedata)) > 0)
##plus first and last columns
mean_std <- wholedata[,c(1,mean_std_index,563,564)]
## 3. Uses descriptive activity names to name the activities in the data set
## Substitute activities numbers by activity names
## Done in step 1
## 4. Appropriately labels the data set with descriptive activity names.
## Substitute variable names by readable ones
## Done in step 1
## 5. Creates a second, independent tidy data set with the average of each
## variable for each activity and each subject.
## Each subject only corresponding to one activity, so use "subject" as index
## Creat a new column using "activity" + "subject"
mean_std[,83] <- paste(mean_std[,1], mean_std[,81], sep="-")
colnames(mean_std)[83] <- "act_sub"
## build the dataframe
mean_by_sub <- data.frame()
for (i in 2:80){
mean_by_sub <- rbind(mean_by_sub,
tapply(mean_std[,i],mean_std$act_sub,mean))
}
## Use act_sub to name the dataframe, add the variable_name as row name
act_sub_level <- subset(mean_std$act_sub, !duplicated(mean_std$act_sub))
colnames(mean_by_sub) <- act_sub_level
rownames(mean_by_sub) <- colnames(wholedata)[mean_std_index]
write.table(wholedata, "./UCI HAR Dataset/submission/wholedata.txt", sep=" ")
write.table(mean_std, "./UCI HAR Dataset/submission/mean_std.txt", sep=" ")
write.table(mean_by_sub, "./UCI HAR Dataset/submission/tidy_data.txt",
sep=" ")
View(mean_by_sub)
## 1. Getting the data
## 数据来源为FIFA官网，抓取1966-2010共十一届世界杯的历史数据网页，通过解析html文
## 件，获得包含小组赛胜场数、负场数、平局数、进球数、被进球数、积分信息，再结合
## 淘汰赛的胜负结果，生成表格
library(XML)
Url_2010 <- "view-source:http://www.fifa.com/tournaments/archive/worldcup/southafrica2010/matches/index.html"
Url_2006 <- "view-source:http://www.fifa.com/tournaments/archive/worldcup/germany2006/matches/index.html"
Url_2002 <- "view-source:http://www.fifa.com/tournaments/archive/worldcup/koreajapan2002/matches/index.html"
Url_1998 <- "view-source:http://www.fifa.com/tournaments/archive/worldcup/france1998/matches/index.html"
Url_1994 <- "view-source:http://www.fifa.com/tournaments/archive/worldcup/usa1994/matches/index.html"
Url_1990 <- "view-source:http://www.fifa.com/tournaments/archive/worldcup/italy1990/matches/index.html"
Url_1986 <- "view-source:http://www.fifa.com/tournaments/archive/worldcup/mexico1986/matches/index.html"
Url_1982 <- "view-source:http://www.fifa.com/tournaments/archive/worldcup/spain1982/matches/index.html"
Url_1978 <- "view-source:http://www.fifa.com/tournaments/archive/worldcup/argentina1978/matches/index.html"
Url_1974 <- "view-source:http://www.fifa.com/tournaments/archive/worldcup/germany1974/matches/index.html"
Url_1970 <- "view-source:http://www.fifa.com/tournaments/archive/worldcup/mexico1970/matches/index.html"
Url_1966 <- "view-source:http://www.fifa.com/tournaments/archive/worldcup/england1966/matches/index.html"
web_2010 <- htmlTreeParse(Url_2010, useInternal=TRUE)
## 插入html图片
## 解析小组赛结果
result_2010 <- xpathSApply(web_2010, "//td[@class='c']", xmlValue)
team_ <- xpathSApply(web_2010, "//td[@class='l']", xmlValue)
## 1. Getting the data
## 数据来源为FIFA官网，抓取1966-2010共十一届世界杯的历史数据网页，通过解析html文
## 件，获得包含小组赛胜场数、负场数、平局数、进球数、被进球数、积分信息，再结合
## 淘汰赛的胜负结果，生成表格
library(XML)
Url_2010 <- "http://www.fifa.com/tournaments/archive/worldcup/southafrica2010/matches/index.html"
Url_2006 <- "view-source:http://www.fifa.com/tournaments/archive/worldcup/germany2006/matches/index.html"
Url_2002 <- "view-source:http://www.fifa.com/tournaments/archive/worldcup/koreajapan2002/matches/index.html"
Url_1998 <- "view-source:http://www.fifa.com/tournaments/archive/worldcup/france1998/matches/index.html"
Url_1994 <- "view-source:http://www.fifa.com/tournaments/archive/worldcup/usa1994/matches/index.html"
Url_1990 <- "view-source:http://www.fifa.com/tournaments/archive/worldcup/italy1990/matches/index.html"
Url_1986 <- "view-source:http://www.fifa.com/tournaments/archive/worldcup/mexico1986/matches/index.html"
Url_1982 <- "view-source:http://www.fifa.com/tournaments/archive/worldcup/spain1982/matches/index.html"
Url_1978 <- "view-source:http://www.fifa.com/tournaments/archive/worldcup/argentina1978/matches/index.html"
Url_1974 <- "view-source:http://www.fifa.com/tournaments/archive/worldcup/germany1974/matches/index.html"
Url_1970 <- "view-source:http://www.fifa.com/tournaments/archive/worldcup/mexico1970/matches/index.html"
Url_1966 <- "view-source:http://www.fifa.com/tournaments/archive/worldcup/england1966/matches/index.html"
web_2010 <- htmlTreeParse(Url_2010, useInternal=TRUE)
## 插入html图片
## 解析小组赛结果
result_2010 <- xpathSApply(web_2010, "//td[@class='c']", xmlValue)
team_ <- xpathSApply(web_2010, "//td[@class='l']", xmlValue)
?data.frame
?as.data.frame
?as.matrix
## 1. Getting the data
## 数据来源为FIFA官网，抓取1966-2010共十一届世界杯的历史数据网页，通过解析html文
## 件，获得包含小组赛胜场数、负场数、平局数、进球数、被进球数、积分信息，再结合
## 淘汰赛的胜负结果，生成表格
library(XML)
Url_2010 <- "http://www.fifa.com/tournaments/archive/worldcup/southafrica2010/matches/index.html"
Url_2006 <- "http://www.fifa.com/tournaments/archive/worldcup/germany2006/matches/index.html"
Url_2002 <- "http://www.fifa.com/tournaments/archive/worldcup/koreajapan2002/matches/index.html"
Url_1998 <- "http://www.fifa.com/tournaments/archive/worldcup/france1998/matches/index.html"
Url_1994 <- "http://www.fifa.com/tournaments/archive/worldcup/usa1994/matches/index.html"
Url_1990 <- "http://www.fifa.com/tournaments/archive/worldcup/italy1990/matches/index.html"
Url_1986 <- "http://www.fifa.com/tournaments/archive/worldcup/mexico1986/matches/index.html"
Url_1982 <- "http://www.fifa.com/tournaments/archive/worldcup/spain1982/matches/index.html"
Url_1978 <- "http://www.fifa.com/tournaments/archive/worldcup/argentina1978/matches/index.html"
Url_1974 <- "http://www.fifa.com/tournaments/archive/worldcup/germany1974/matches/index.html"
Url_1970 <- "http://www.fifa.com/tournaments/archive/worldcup/mexico1970/matches/index.html"
Url_1966 <- "http://www.fifa.com/tournaments/archive/worldcup/england1966/matches/index.html"
web_2010 <- htmlTreeParse(Url_2010, useInternal=TRUE)
## 插入html图片
## 解析小组赛结果
score_2010 <- xpathSApply(web_2010, "//td[@class='c']", xmlValue)
team_name <- xpathSApply(web_2010, "//td[@class='l']", xmlValue)
result <- matrix(score_2010, nrow=4, ncol=7, byrow=FALSE)
View(result)
result_2010_2 <- rbind(team_name,result_2010_1)
## 1. Getting the data
## 数据来源为FIFA官网，抓取1966-2010共十一届世界杯的历史数据网页，通过解析html文
## 件，获得包含小组赛胜场数、负场数、平局数、进球数、被进球数、积分信息，再结合
## 淘汰赛的胜负结果，生成表格
library(XML)
Url_2010 <- "http://www.fifa.com/tournaments/archive/worldcup/southafrica2010/matches/index.html"
Url_2006 <- "http://www.fifa.com/tournaments/archive/worldcup/germany2006/matches/index.html"
Url_2002 <- "http://www.fifa.com/tournaments/archive/worldcup/koreajapan2002/matches/index.html"
Url_1998 <- "http://www.fifa.com/tournaments/archive/worldcup/france1998/matches/index.html"
Url_1994 <- "http://www.fifa.com/tournaments/archive/worldcup/usa1994/matches/index.html"
Url_1990 <- "http://www.fifa.com/tournaments/archive/worldcup/italy1990/matches/index.html"
Url_1986 <- "http://www.fifa.com/tournaments/archive/worldcup/mexico1986/matches/index.html"
Url_1982 <- "http://www.fifa.com/tournaments/archive/worldcup/spain1982/matches/index.html"
Url_1978 <- "http://www.fifa.com/tournaments/archive/worldcup/argentina1978/matches/index.html"
Url_1974 <- "http://www.fifa.com/tournaments/archive/worldcup/germany1974/matches/index.html"
Url_1970 <- "http://www.fifa.com/tournaments/archive/worldcup/mexico1970/matches/index.html"
Url_1966 <- "http://www.fifa.com/tournaments/archive/worldcup/england1966/matches/index.html"
web_2010 <- htmlTreeParse(Url_2010, useInternal=TRUE)
## 插入html图片
## 解析小组赛结果
score_2010 <- xpathSApply(web_2010, "//td[@class='c']", xmlValue)
team_name <- xpathSApply(web_2010, "//td[@class='l']", xmlValue)
result_2010_1 <- matrix(score_2010, nrow=4, ncol=7, byrow=FALSE)
result_2010_2 <- rbind(team_name,result_2010_1)
## 1. Getting the data
## 数据来源为FIFA官网，抓取1966-2010共十一届世界杯的历史数据网页，通过解析html文
## 件，获得包含小组赛胜场数、负场数、平局数、进球数、被进球数、积分信息，再结合
## 淘汰赛的胜负结果，生成表格
library(XML)
Url_2010 <- "http://www.fifa.com/tournaments/archive/worldcup/southafrica2010/matches/index.html"
Url_2006 <- "http://www.fifa.com/tournaments/archive/worldcup/germany2006/matches/index.html"
Url_2002 <- "http://www.fifa.com/tournaments/archive/worldcup/koreajapan2002/matches/index.html"
Url_1998 <- "http://www.fifa.com/tournaments/archive/worldcup/france1998/matches/index.html"
Url_1994 <- "http://www.fifa.com/tournaments/archive/worldcup/usa1994/matches/index.html"
Url_1990 <- "http://www.fifa.com/tournaments/archive/worldcup/italy1990/matches/index.html"
Url_1986 <- "http://www.fifa.com/tournaments/archive/worldcup/mexico1986/matches/index.html"
Url_1982 <- "http://www.fifa.com/tournaments/archive/worldcup/spain1982/matches/index.html"
Url_1978 <- "http://www.fifa.com/tournaments/archive/worldcup/argentina1978/matches/index.html"
Url_1974 <- "http://www.fifa.com/tournaments/archive/worldcup/germany1974/matches/index.html"
Url_1970 <- "http://www.fifa.com/tournaments/archive/worldcup/mexico1970/matches/index.html"
Url_1966 <- "http://www.fifa.com/tournaments/archive/worldcup/england1966/matches/index.html"
web_2010 <- htmlTreeParse(Url_2010, useInternal=TRUE)
## 插入html图片
## 解析小组赛结果
score_2010 <- xpathSApply(web_2010, "//td[@class='c']", xmlValue)
team_name <- xpathSApply(web_2010, "//td[@class='l']", xmlValue)
result_2010_1 <- matrix(score_2010, nrow=4, ncol=7, byrow=FALSE)
result_2010_2 <- cbind(team_name,result_2010_1)
## 1. Getting the data
## 数据来源为FIFA官网，抓取1966-2010共十一届世界杯的历史数据网页，通过解析html文
## 件，获得包含小组赛胜场数、负场数、平局数、进球数、被进球数、积分信息，再结合
## 淘汰赛的胜负结果，生成表格
library(XML)
Url_2010 <- "http://www.fifa.com/tournaments/archive/worldcup/southafrica2010/matches/index.html"
Url_2006 <- "http://www.fifa.com/tournaments/archive/worldcup/germany2006/matches/index.html"
Url_2002 <- "http://www.fifa.com/tournaments/archive/worldcup/koreajapan2002/matches/index.html"
Url_1998 <- "http://www.fifa.com/tournaments/archive/worldcup/france1998/matches/index.html"
Url_1994 <- "http://www.fifa.com/tournaments/archive/worldcup/usa1994/matches/index.html"
Url_1990 <- "http://www.fifa.com/tournaments/archive/worldcup/italy1990/matches/index.html"
Url_1986 <- "http://www.fifa.com/tournaments/archive/worldcup/mexico1986/matches/index.html"
Url_1982 <- "http://www.fifa.com/tournaments/archive/worldcup/spain1982/matches/index.html"
Url_1978 <- "http://www.fifa.com/tournaments/archive/worldcup/argentina1978/matches/index.html"
Url_1974 <- "http://www.fifa.com/tournaments/archive/worldcup/germany1974/matches/index.html"
Url_1970 <- "http://www.fifa.com/tournaments/archive/worldcup/mexico1970/matches/index.html"
Url_1966 <- "http://www.fifa.com/tournaments/archive/worldcup/england1966/matches/index.html"
web_2010 <- htmlTreeParse(Url_2010, useInternal=TRUE)
## 插入html图片
## 解析小组赛结果
score_2010 <- xpathSApply(web_2010, "//td[@class='c']", xmlValue)
team_name <- xpathSApply(web_2010, "//td[@class='l']", xmlValue)
result_2010_1 <- matrix(score_2010, nrow=4, ncol=7, byrow=FALSE)
result_2010_2 <- cbind(as.matrix(team_name),result_2010_1)
View(result_2010_1)
View(result_2010_2)
## 1. Getting the data
## 数据来源为FIFA官网，抓取1966-2010共十一届世界杯的历史数据网页，通过解析html文
## 件，获得包含小组赛胜场数、负场数、平局数、进球数、被进球数、积分信息，再结合
## 淘汰赛的胜负结果，生成表格
library(XML)
Url_2010 <- "http://www.fifa.com/tournaments/archive/worldcup/southafrica2010/matches/index.html"
Url_2006 <- "http://www.fifa.com/tournaments/archive/worldcup/germany2006/matches/index.html"
Url_2002 <- "http://www.fifa.com/tournaments/archive/worldcup/koreajapan2002/matches/index.html"
Url_1998 <- "http://www.fifa.com/tournaments/archive/worldcup/france1998/matches/index.html"
Url_1994 <- "http://www.fifa.com/tournaments/archive/worldcup/usa1994/matches/index.html"
Url_1990 <- "http://www.fifa.com/tournaments/archive/worldcup/italy1990/matches/index.html"
Url_1986 <- "http://www.fifa.com/tournaments/archive/worldcup/mexico1986/matches/index.html"
Url_1982 <- "http://www.fifa.com/tournaments/archive/worldcup/spain1982/matches/index.html"
Url_1978 <- "http://www.fifa.com/tournaments/archive/worldcup/argentina1978/matches/index.html"
Url_1974 <- "http://www.fifa.com/tournaments/archive/worldcup/germany1974/matches/index.html"
Url_1970 <- "http://www.fifa.com/tournaments/archive/worldcup/mexico1970/matches/index.html"
Url_1966 <- "http://www.fifa.com/tournaments/archive/worldcup/england1966/matches/index.html"
web_2010 <- htmlTreeParse(Url_2010, useInternal=TRUE)
## 插入html图片
## 解析小组赛结果
score_2010 <- xpathSApply(web_2010, "//td[@class='c']", xmlValue)
team_name <- xpathSApply(web_2010, "//td[@class='l']", xmlValue)
result_2010_1 <- matrix(score_2010, nrow=4, byrow=FALSE)
result_2010_2 <- cbind(team_name,result_2010_1)
View(result_2010_2)
## 1. Getting the data
## 数据来源为FIFA官网，抓取1966-2010共十一届世界杯的历史数据网页，通过解析html文
## 件，获得包含小组赛胜场数、负场数、平局数、进球数、被进球数、积分信息，再结合
## 淘汰赛的胜负结果，生成表格
library(XML)
Url_2010 <- "http://www.fifa.com/tournaments/archive/worldcup/southafrica2010/matches/index.html"
Url_2006 <- "http://www.fifa.com/tournaments/archive/worldcup/germany2006/matches/index.html"
Url_2002 <- "http://www.fifa.com/tournaments/archive/worldcup/koreajapan2002/matches/index.html"
Url_1998 <- "http://www.fifa.com/tournaments/archive/worldcup/france1998/matches/index.html"
Url_1994 <- "http://www.fifa.com/tournaments/archive/worldcup/usa1994/matches/index.html"
Url_1990 <- "http://www.fifa.com/tournaments/archive/worldcup/italy1990/matches/index.html"
Url_1986 <- "http://www.fifa.com/tournaments/archive/worldcup/mexico1986/matches/index.html"
Url_1982 <- "http://www.fifa.com/tournaments/archive/worldcup/spain1982/matches/index.html"
Url_1978 <- "http://www.fifa.com/tournaments/archive/worldcup/argentina1978/matches/index.html"
Url_1974 <- "http://www.fifa.com/tournaments/archive/worldcup/germany1974/matches/index.html"
Url_1970 <- "http://www.fifa.com/tournaments/archive/worldcup/mexico1970/matches/index.html"
Url_1966 <- "http://www.fifa.com/tournaments/archive/worldcup/england1966/matches/index.html"
web_2010 <- htmlTreeParse(Url_2010, useInternal=TRUE)
## 插入html图片
## 解析小组赛结果
score_2010 <- xpathSApply(web_2010, "//td[@class='c']", xmlValue)
team_name <- xpathSApply(web_2010, "//td[@class='l']", xmlValue)
result_2010_1 <- matrix(score_2010, ncol=7, byrow=FALSE) ##根据表格看出有7列数据
result_2010_2 <- cbind(team_name, result_2010_1)
View(result_2010_2)
result_2010_2[27,1]
## 1. Getting the data
## 数据来源为FIFA官网，抓取1966-2010共十一届世界杯的历史数据网页，通过解析html文
## 件，获得包含小组赛胜场数、负场数、平局数、进球数、被进球数、积分信息，再结合
## 淘汰赛的胜负结果，生成表格
library(XML)
Url_2010 <- "http://www.fifa.com/tournaments/archive/worldcup/southafrica2010/matches/index.html"
Url_2006 <- "http://www.fifa.com/tournaments/archive/worldcup/germany2006/matches/index.html"
Url_2002 <- "http://www.fifa.com/tournaments/archive/worldcup/koreajapan2002/matches/index.html"
Url_1998 <- "http://www.fifa.com/tournaments/archive/worldcup/france1998/matches/index.html"
Url_1994 <- "http://www.fifa.com/tournaments/archive/worldcup/usa1994/matches/index.html"
Url_1990 <- "http://www.fifa.com/tournaments/archive/worldcup/italy1990/matches/index.html"
Url_1986 <- "http://www.fifa.com/tournaments/archive/worldcup/mexico1986/matches/index.html"
Url_1982 <- "http://www.fifa.com/tournaments/archive/worldcup/spain1982/matches/index.html"
Url_1978 <- "http://www.fifa.com/tournaments/archive/worldcup/argentina1978/matches/index.html"
Url_1974 <- "http://www.fifa.com/tournaments/archive/worldcup/germany1974/matches/index.html"
Url_1970 <- "http://www.fifa.com/tournaments/archive/worldcup/mexico1970/matches/index.html"
Url_1966 <- "http://www.fifa.com/tournaments/archive/worldcup/england1966/matches/index.html"
web_2010 <- htmlTreeParse(Url_2010, useInternal=TRUE)
## 插入html图片
## 以2010年世界杯结果为test dataset
## 获得小组赛结果
score_2010 <- xpathSApply(web_2010, "//td[@class='c']", xmlValue)
team_name <- xpathSApply(web_2010, "//td[@class='l']", xmlValue)
result_2010_1 <- matrix(score_2010, ncol=7, byrow=FALSE) ##根据表格看出有7列数据
result_2010_2 <- cbind(team_name, result_2010_1)
colnames(result_2010_2) <- c("Team", "Played", "Won", "Draw", "Lost",
"Goals For", "Goals Against", "Points")
View(result_2010_2)
## 1. Getting the data
## 数据来源为FIFA官网，抓取1966-2010共十一届世界杯的历史数据网页，通过解析html文
## 件，获得包含小组赛胜场数、负场数、平局数、进球数、被进球数、积分信息，再结合
## 淘汰赛的胜负结果，生成表格
library(XML)
Url_2010 <- "http://www.fifa.com/tournaments/archive/worldcup/southafrica2010/matches/index.html"
Url_2006 <- "http://www.fifa.com/tournaments/archive/worldcup/germany2006/matches/index.html"
Url_2002 <- "http://www.fifa.com/tournaments/archive/worldcup/koreajapan2002/matches/index.html"
Url_1998 <- "http://www.fifa.com/tournaments/archive/worldcup/france1998/matches/index.html"
Url_1994 <- "http://www.fifa.com/tournaments/archive/worldcup/usa1994/matches/index.html"
Url_1990 <- "http://www.fifa.com/tournaments/archive/worldcup/italy1990/matches/index.html"
Url_1986 <- "http://www.fifa.com/tournaments/archive/worldcup/mexico1986/matches/index.html"
Url_1982 <- "http://www.fifa.com/tournaments/archive/worldcup/spain1982/matches/index.html"
Url_1978 <- "http://www.fifa.com/tournaments/archive/worldcup/argentina1978/matches/index.html"
Url_1974 <- "http://www.fifa.com/tournaments/archive/worldcup/germany1974/matches/index.html"
Url_1970 <- "http://www.fifa.com/tournaments/archive/worldcup/mexico1970/matches/index.html"
Url_1966 <- "http://www.fifa.com/tournaments/archive/worldcup/england1966/matches/index.html"
web_2010 <- htmlTreeParse(Url_2010, useInternal=TRUE)
## 插入html图片
## 以2010年世界杯结果为test dataset
## 获得小组赛结果
score_2010 <- xpathSApply(web_2010, "//td[@class='c']", xmlValue)
team_name <- xpathSApply(web_2010, "//td[@class='l']", xmlValue)
result_2010_1 <- matrix(score_2010, ncol=7, byrow=FALSE) ##根据表格看出有7列数据
result_2010_2 <- cbind(team_name, result_2010_1)
colnames(result_2010_2) <- c("Team", "Played", "Won", "Draw", "Lost",
"Goals For", "Goals Against", "Points")
## 小组赛比赛场数是一定的，根据胜场、平局可以计算出负场和积分，因此为了防止共线
## 性的干扰，排除"Played",“Lost"和"Points"几列
result_2010_3 <- result_2010_2[,c(1,3,4,6,7)]
View(result_2010_3)
home_team <- xpathSApply(web_2010, "//td[@class='l homeTeam']", xmlValue)
home_team
home_team <- xpathSApply(web_2010, "//td[@class='l homeTeam']",
home_team <- xpathSApply(web_2010, "//td[@class='l homeTeam']",
xmlValue)[-1:48,]
)
home_team <- xpathSApply(web_2010, "//td[@class='l homeTeam']",
xmlValue)[-1:48,]
/td[@class='l homeTeam']",
xmlValue)[-c(1:48),]
home_team <- xpathSApply(web_2010, "//td[@class='l homeTeam']",
xmlValue)[-c(1:48),]
home_team <- xpathSApply(web_2010, "//td[@class='l homeTeam']",
xmlValue)[49:64,]
home_team <- xpathSApply(web_2010, "//td[@class='l homeTeam']",
xmlValue)[49:64]
result <- xpathSApply(web_2010, "//[@class='c']", xmlValue)
result <- xpathSApply(web_2010, "// [@class='c']", xmlValue)
result <- xpathSApply(web_2010, "// td[@class='c']", xmlValue)
result <- xpathSApply(web_2010, "// td style="width:120px"[@class='c']", xmlValue)
setwd("./exdata-data-NEI_data")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
View(SCC)
NEI_bal <- subset(NEI, fips=="24510")
## emissions from motor vehicle
mot_index <- which(regexpr("Vehicles", SCC$Short.Name)>0)
SCC <- SCC$SCC[mot_index]
NEI_bal_mot <- NEI_bal[NEI_bal$SCC%in%SCC,]
mot_index <- which(regexpr("Vehicles", SCC$Short.Name)>0)
mot_SCC <- SCC$SCC[mot_index]
NEI_bal_mot <- NEI_bal[NEI_bal$SCC%in%mot_SCC,]
NEI_bal <- subset(NEI, fips=="24510")
## emissions from motor vehicle
mot_index <- which(regexpr("Vehicles", SCC$Short.Name)>0)
mot_SCC <- SCC$SCC[mot_index]
NEI_bal_mot <- NEI_bal[NEI_bal$SCC%in%mot_SCC,]
mot_index <- which(regexpr("Vehicles", SCC$Short.Name)>0)
setwd("./exdata-data-NEI_data")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
## Dataset for Baltimore city
NEI_bal <- subset(NEI, fips=="24510")
## emissions from motor vehicle
mot_index <- which(regexpr("Vehicles", SCC$Short.Name)>0)
mot_SCC <- SCC$SCC[mot_index]
NEI_bal_mot <- NEI_bal[NEI_bal$SCC%in%mot_SCC,]
View(NEI_bal_mot)
emi_veh <- aggregate(Emissions, year, data=NEI_bal_mot, sum)
plot(emi_veh, xlab="year", ylab="PM2.5 Emission(Tons)",
main="Total Emission Change by Vehicle in Baltimore", xaxt="n")
axis(1, at=1999:2008)
emi_veh <- aggregate(Emissions, year, data=NEI_bal_mot, sum)
emi_veh <- aggregate(Emissions ~ year, data=NEI_bal_mot, sum)
plot(emi_veh, xlab="year", ylab="PM2.5 Emission(Tons)",
main="Total Emission Change by Vehicle in Baltimore", xaxt="n")
axis(1, at=1999:2008)
dev.off()
mot_index <- which(regexpr("Vehicles", SCC$Short.Name)>0)
mot_SCC <- SCC$SCC[mot_index]
NEI_bal_mot <- NEI_bal[NEI_bal$SCC%in%mot_SCC,]
## Split sum by years and plot
emi_veh <- aggregate(Emissions ~ year, data=NEI_bal_mot, sum)
plot(emi_veh, xlab="year", ylab="PM2.5 Emission(Tons)",
main="Total Emission Change by Vehicle in Baltimore", xaxt="n")
axis(1, at=1999:2008)
dev.copy(png, file="plot5.png")
dev.off()
mot_index <- which(grep("Vehicles", SCC$Short.Name)>0)
mot_SCC <- SCC$SCC[mot_index]
NEI_bal_mot <- NEI_bal[NEI_bal$SCC%in%mot_SCC,]
## emissions from motor vehicle
mot_index <- which(grepl("Vehicles", SCC$Short.Name)>0)
mot_SCC <- SCC$SCC[mot_index]
NEI_bal_mot <- NEI_bal[NEI_bal$SCC%in%mot_SCC,]
mot_index <- which(regexpr("Vehicles", SCC$Short.Name)>0)
mot_SCC <- SCC$SCC[mot_index]
NEI_bal_mot <- NEI_bal[NEI_bal$SCC%in%mot_SCC,]
## emissions from motor vehicle
mot_index <- which(regexpr("Vehicles", SCC$Short.Name)>0)
mot_SCC <- SCC$SCC[mot_index]
NEI_mot <- NEI[NEI$SCC%in%mot_SCC,]
## emission in Baltimore City and California
NEI_city <- NEI_mot[NEI_mot$fip=="24510"|NEI_mot$fip=="06037",]
setwd("./exdata-data-NEI_data")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
## emissions from motor vehicle
mot_index <- which(regexpr("Vehicles", SCC$Short.Name)>0)
mot_SCC <- SCC$SCC[mot_index]
NEI_mot <- NEI[NEI$SCC%in%mot_SCC,]
## emission in Baltimore City and California
NEI_city <- NEI_mot[NEI_mot$fip=="24510"|NEI_mot$fip=="06037",]
View(NEI)
NEI_city <- NEI_mot[NEI_mot$fip %in% c("24510","06037"),]
View(NEI_city)
MEI_city_year <- aggregate(Emissions ~ year, data=EMI_city, sum)
NEI_city_year <- aggregate(Emissions ~ year, data=NMI_city, sum)
NEI_city_year <- aggregate(Emissions ~ year, data=NEI_city, sum)
View(NEI_city_year)
NEI_city_year <- aggregate(Emissions ~ year + fip, data=NEI_city, sum)
NEI_city <- NEI_mot[NEI_mot$fips %in% c("24510","06037"),]
NEI_city_year <- aggregate(Emissions ~ year + fips, data=NEI_city, sum)
View(NEI_city_year)
NEI_city_year <- aggregate(Emissions ~ year + fips, data=NEI_city, col=fips)
library(ggplot2)
qplot(year, Emissions, data=NEI_city_year, col=fips)
View(NEI_city_year)
qplot(year, Emissions, data=NEI_city_year, col=fips, xlab="year",
ylanb="PM2.5 Emission(Tons)",
main="Emission Change by Vehicle in Baltimore City and California")
NEI_city_year <- aggregate(Emissions ~ year + fips, data=NEI_city, sum)
NEI_city_year[NEI_city_year$fips=="24510",4] <- "Baltimore City"
NEI_city_year[NEI_city_year$fips=="06037",4] <- "California"
colnames(NEI_city_year)[4] <- "city"
library(ggplot2)
qplot(year, Emissions, data=NEI_city_year, col=city, xlab="year",
ylanb="PM2.5 Emission(Tons)",
main="Emission Change by Vehicle in Baltimore City and California")
?line
?abline
abline(h=max(NEI_city_year$Emissions))
q <- gglot(year, Emissions, data=NEI_city_year, col=city, xlab="year",
ylanb="PM2.5 Emission(Tons)",
main="Emission Change by Vehicle in Baltimore City and California")
library(ggplot2)
q <- gglot(year, Emissions, data=NEI_city_year, col=city, xlab="year",
ylanb="PM2.5 Emission(Tons)",
main="Emission Change by Vehicle in Baltimore City and California")
setwd("./exdata-data-NEI_data")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
## emissions from motor vehicle
mot_index <- which(regexpr("Vehicles", SCC$Short.Name)>0)
mot_SCC <- SCC$SCC[mot_index]
NEI_mot <- NEI[NEI$SCC%in%mot_SCC,]
## emission in Baltimore City and California
NEI_city <- NEI_mot[NEI_mot$fips %in% c("24510","06037"),]
## split emissions by year and add a city column
NEI_city_year <- aggregate(Emissions ~ year + fips, data=NEI_city, sum)
NEI_city_year[NEI_city_year$fips=="24510",4] <- "Baltimore City"
NEI_city_year[NEI_city_year$fips=="06037",4] <- "California"
colnames(NEI_city_year)[4] <- "city"
library(ggplot2)
q <- qplot(year, Emissions, data=NEI_city_year, col=city, xlab="year",
ylanb="PM2.5 Emission(Tons)",
main="Emission Change by Vehicle in Baltimore City and California")
dev.copy(png, file="plot6.png")
dev.off()
library(ggplot2)
q <- qplot(year, Emissions, data=NEI_city_year, col=city, xlab="year",
ylanb="PM2.5 Emission(Tons)",
main="Emission Change by Vehicle in Baltimore City and California")
dev.copy(png, file="plot6.png")
dev.off()
q <- qplot(year, Emissions, data=NEI_city_year, col=city, xlab="year",
ylanb="PM2.5 Emission(Tons)",
main="Emission Change by Vehicle in Baltimore City and California")
library(ggplot2)
qplot(year, Emissions, data=NEI_city_year, col=city, xlab="year",
ylanb="PM2.5 Emission(Tons)",
main="Emission Change by Vehicle in Baltimore City and California")
dev.copy(png, file="plot6.png")
dev.off()
qplot(year, Emissions, data=NEI_city_year, col=city, xlab="year",
ylanb="PM2.5 Emission(Tons)",
main="Emission Change by Vehicle in Baltimore City and California")
## Compare emissions from motor vehicle sources in Baltimore City with emissions
## from motor vehicle sources in Los Angeles County, California (fips == "06037"
## ). Which city has seen greater changes over time in motor vehicle emissions?
setwd("./exdata-data-NEI_data")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
## emissions from motor vehicle
mot_index <- which(regexpr("Vehicles", SCC$Short.Name)>0)
mot_SCC <- SCC$SCC[mot_index]
NEI_mot <- NEI[NEI$SCC%in%mot_SCC,]
## emission in Baltimore City and California
NEI_city <- NEI_mot[NEI_mot$fips %in% c("24510","06037"),]
## split emissions by year and add a city column
NEI_city_year <- aggregate(Emissions ~ year + fips, data=NEI_city, sum)
NEI_city_year[NEI_city_year$fips=="24510",4] <- "Baltimore City"
NEI_city_year[NEI_city_year$fips=="06037",4] <- "California"
colnames(NEI_city_year)[4] <- "city"
library(ggplot2)
qplot(year, Emissions, data=NEI_city_year, col=city, xlab="year",
ylanb="PM2.5 Emission(Tons)",
main="Emission Change by Vehicle in Baltimore City and California")
dev.copy(png, file="plot6.png")
dev.off()
qplot(year, Emissions, data=NEI_city_year, col=city, xlab="year",
ylab="PM2.5 Emission(Tons)",
main="Emission Change by Vehicle in Baltimore City and California")
qplot(year, Emissions, data=NEI_city_year, col=city, xlab="year",
ylab="PM2.5 Emission(Tons)",
main="Emission Change by Vehicle in Baltimore City and California")
